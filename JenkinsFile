def sendslacknotification(String buildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
  }
node{
    echo "Job name is: ${env.JOB_NAME}"
    echo "Node name is : ${env.NODE_NAME}"
    echo "Build number is: ${env.BUILD_NUMBER}"
    //Configured discard builds and POLSCM
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
def mavenHome = tool name: 'Maven 3.8.5'
try{
sendslacknotification('STARTED')
//Get the code from github repository
stage('checkoutcode'){
git branch: 'development', credentialsId: 'a40d5448-1e55-4bb9-99ac-be1248aec3a0', url: 'https://github.com/sureshdevopsprogram/maven-web-application.git'
}
//to do build we need to use maven build tool
stage('build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
//to execute the sonarQube report
stage('Execute sonarQube report'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}
//Upload the artifacts into artifactory repository 
stage('Upload the artifacts'){
sh "${mavenHome}/bin/mvn deploy"
}
//Deploy the application into tomcat server (copy the war files into webapps directory)
stage('Deploy the application into tomcat server'){
sshagent(['ef943ff5-d21b-42ac-9e7c-46059abec280']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@15.206.89.127:/opt/apache-tomcat-9.0.62/webapps"
}
}
*/
}//Try closing
catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    sendslacknotification(currentBuild.result)
  }
  }//Node closing
